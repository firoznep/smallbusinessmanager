


      
        {({handleChange, handleBlur, handleSubmit, setFieldValue, values}) => (
          <ScrollView keyboardShouldPersistTaps="handled">
            {/* DATE */}
            <ModalDateTimePicker
              pickedDateTime={(d) => setFieldValue('date', d)}
              title={new Date(values.date).toDateString()}
            />

            {/* NAME */}
            <BasicInput
              label="Name"
              onChangeText={handleChange('name')}
              onBlur={handleBlur('name')}
            />
            <ErrorMsg name="name" />

            {/* MODEL */}
            <BasicInput
              label="Model"
              onChangeText={handleChange('model')}
              onBlur={handleBlur('model')}
            />

            {/* COLOR */}
            <BasicInput
              label="Color"
              onChangeText={handleChange('color')}
              onBlur={handleBlur('color')}
            />

            {/* COST PRICE */}
            <BasicInput
              label="Cost Price"
              onChangeText={handleChange('cost_price')}
              onBlur={handleBlur('cost_price')}
              keyboardType="numeric"
            />
            <ErrorMsg name="cost_price" />

            {/*  EXPENSES */}
            <BasicInput
              label="Expenses"
              onChangeText={handleChange('expenses')}
              onBlur={handleBlur('expenses')}
              keyboardType="numeric"
            />

            {/* MARGIN PERCENT */}
            <BasicInput
              label="Profit %"
              onChangeText={handleChange('profit_percent')}
              onBlur={handleBlur('profit_percent')}
              keyboardType="numeric"
            />

            <Text style={{color: 'red', fontSize: 9}}>
              Always update this value, if cost_price or expenses or profit % is
              changed!
            </Text>

            <BasicButton
              style={styles.whiteBtn}
              fontSize={20}
              fontColor={'gray'}
              onPress={() =>
                setFieldValue(
                  'sale_price',
                  getTotalWithPercent(
                    Number(values.cost_price) + Number(values.expenses),
                    values.profit_percent,
                  ),
                )
              }
              title={`Sale Price: ${formatToCurrencyInd(values.sale_price)}`}
            />

            {/* DESCRIPTION */}
            <Text>Description</Text>
            <TextInput
              placeholder="Description"
              onChangeText={handleChange('description')}
              onBlur={handleBlur('description')}
              multiline={true}
              numberOfLines={5}
              textAlignVertical="top"
              style={{
                backgroundColor: 'white',
                borderWidth: 2,
                marginBottom: 10,
              }}
            />

            <BasicButton
              onPress={handleSubmit}
              title="Submit"
              iconName="check"
            />
          </ScrollView>
        )}

    